# This workflow will build a docker container, publish it to Github Packages, and deploy it to DigitalOcean k8s cluster when a release is created
name: Tests & Build Redash
on:
  push:
    branches: "develop"

jobs:
  buidl-redash:
    name: Setup, Build, Publish Redash images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Define variables
        run: |
          export GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | awk '{print substr($0,0,7)}')
          echo "::set-env name=IMAGE_VERSION::$GITHUB_SHA_SHORT"

      - uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Redash image
        run: |
          # cd packages/redash/
          docker build --tag docker.pkg.github.com/ttekglobal/redash/ttekredash:dev-$IMAGE_VERSION .

      - name: Push Redash image
        run: docker push docker.pkg.github.com/ttekglobal/redash/ttekredash:dev-$IMAGE_VERSION
  deploy-k8s:
    name: "Deployment"
    runs-on: ubuntu-latest
    needs: [buidl-redash]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup kubectl
        uses: matootie/dokube@v1.3.1
        with:
          personalAccessToken:  ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: ttek
          expirationTime: 300
          namespace: vts-dev

      - name: Define variables
        run: |
          export GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | awk '{print substr($0,0,7)}')
          echo "::set-env name=IMAGE_VERSION::$GITHUB_SHA_SHORT"

      - name: Setup Helm v3
        uses: azure/setup-helm@v1
        with:
          version: "v3.1.2"
          id: install

      - name: Install / Upgrade App
        run: |
          helm upgrade  --install ra --namespace=ra --values ./helm/values.yaml ./helm \
            --set image.tag=dev-$IMAGE_VERSION
